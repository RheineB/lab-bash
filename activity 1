user@DESKTOP-T2QIR1G MINGW64 ~
$ #Using the echo command print in console "Hello World" #
  echo 'Hello World'
$ #Create a new directory called new_dir
  mkdir new_dir
$ #Delete/Remove the directory new_dir.
  rmdir new_dir
$ #Copy the file sed.txt from the lorem folder and paste it to the folder lorem-copy folder 
  cd lorem pwd ; #cp <direction of sed.txt> <direction of destination>
$ #Copy the other two files from the lorem folder to lorem-copy folder in just one line using semicolon ;
  cp <dir of lorem.txt> <dir of destination> ; cp <dir of at.txt> <dir of destination>
$ #Show the sed.txt file content from the lorem folder
  cd lorem: ls ; ls sed.txt; cat sed.txt
$ #Show the at.txt file and lorem.txt file contents from lorem folder.
  cat at.txt; cat lorem.txt
$ #Print the first 3 rows in sed.txt file from lorem-copy folder
  head -3 sed.txt
$ #Print the last 3 rows in sed.txt file from lorem-copy folder
  tail -3 sed.txt
$ #Add Homo homini lupus. at the end of sed.txt file in the lorem-copy folder.
  echo 'Homo homini lupus.' >> sed.txt
$ #Print the last 3 rows in sed.txt file from lorem-copy folder. You should see Homo homini lupus.
  tail -n -3 sed.txt
$ #sed command is used to replace the text in a file. Use the sed command to replace all occurances of et with ET in the file at.txt file present in the folder lorem. You can use the following link to refer to sed commands
  sed 's/ET/et' at.txt
$ #Find who is the system user.
  whoami
$ #Find the current path of the directory you are in.
  pwd
$ #List all files with the extension .txt in lorem folder.
  ls *.txt
$ #Count the rows in sed.txt file from lorem folder. Look concatenate cat and wc with the pipe |.
  cat -n sed.txt | wc -1 sed.txt
$ #Count the files which start with lorem in all directories.
  ls: -dg  *lorem*
$ #Store your name in a variable with read command
  $read Rheine
$ #Print that variable
  $Reply
$ #Create a new directory named with variable name.
  read name
  #echo $name
$ #Remove that directory.
  rmdir $name
----------------- this part was the part when I try to put what I have in the terminal to my lab-bash
$ pwd
/c/Users/user

user@DESKTOP-T2QIR1G MINGW64 ~
$ cd IH-labs

user@DESKTOP-T2QIR1G MINGW64 ~/IH-labs (main)
$ git add .
warning: in the working copy of 'README.md', LF will be replaced by CRLF the next time Git touches it
warning: adding embedded git repository: IronNicolas
hint: You've added another git repository inside your current repository.
hint: Clones of the outer repository will not contain the contents of
hint: the embedded repository and will not know how to obtain it.
hint: If you meant to add a submodule, use:
hint:
hint:   git submodule add <url> IronNicolas
hint:
hint: If you added this path by mistake, you can remove it from the
hint: index with:
hint:
hint:   git rm --cached IronNicolas
hint:
hint: See "git help submodule" for more information.
warning: adding embedded git repository: IronRheine
warning: adding embedded git repository: lab-bash

user@DESKTOP-T2QIR1G MINGW64 ~/IH-labs (main)
$ git commit -m 'activity1'
[main 9a64137] activity1
 3 files changed, 3 insertions(+)
 create mode 160000 IronNicolas
 create mode 160000 IronRheine
 create mode 160000 lab-bash

user@DESKTOP-T2QIR1G MINGW64 ~/IH-labs (main)
$ git push
To https://github.com/RheineB/IronRheine.git
 ! [rejected]        main -> main (fetch first)
error: failed to push some refs to 'https://github.com/RheineB/IronRheine.git'
hint: Updates were rejected because the remote contains work that you do
hint: not have locally. This is usually caused by another repository pushing
hint: to the same ref. You may want to first integrate the remote changes
hint: (e.g., 'git pull ...') before pushing again.
hint: See the 'Note about fast-forwards' in 'git push --help' for details.

user@DESKTOP-T2QIR1G MINGW64 ~/IH-labs (main)
$ git clone https://github.com/RheineB/lab-bash.git
fatal: destination path 'lab-bash' already exists and is not an empty directory.

user@DESKTOP-T2QIR1G MINGW64 ~/IH-labs (main)
$ git push
To https://github.com/RheineB/IronRheine.git
 ! [rejected]        main -> main (fetch first)
error: failed to push some refs to 'https://github.com/RheineB/IronRheine.git'
hint: Updates were rejected because the remote contains work that you do
hint: not have locally. This is usually caused by another repository pushing
hint: to the same ref. You may want to first integrate the remote changes
hint: (e.g., 'git pull ...') before pushing again.
hint: See the 'Note about fast-forwards' in 'git push --help' for details.

user@DESKTOP-T2QIR1G MINGW64 ~/IH-labs (main)
